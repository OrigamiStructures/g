# RenumberRequest Flags and Messages

## Role of the class

RenumberRequest (RR) objects are primarily record-and-report objects. They contain almost no logic to determine the validity of a request. Only the containing class RenumberRequests (RRs) has the context required for this task.

As RRs receives and stores RR objects, it sets flags using the provided methods in each RR to indicate its state according to the rule set in RRs.

RR has a the `message( )` method which outputs an array of messages that describe the internal state of the request; the nature of any error, ambiguities, and/or the expected action that will result on execution of the request.

### Assumptions about requests

Pieces will swap numbers but no new numbers will be created and no numbers will be lost.

The apigen docs are [here](/apigen/class-App.Lib.RenumberRequest.html)

## The properties and their methods

### Request data

- protected _old  
   What the number of the piece started as
   - oldNum( )
- protected _new  
   What the number will be if the request is acted on
   - newNum( )

### Flags

- \_bad\_new\_number, default FALSE  
   No new number provided or the new number is not in the set of allowed numbers
   - badNumber(boolean )
- \_implied_change, default FALSE
   This RR was generated by the system. The rules in RRs determined it would be required based on the other requested changes
   - implied(boolean)
- duplicate_new_number, default FALSE  
   The new number is being applied in more that one case
   - duplicate(boolean|integer)
- \_vague_receiver, default FALSE  
   This piece's number is being changed but the destination for its old number hasn't been determined
   - vagueReceiver(boolean)
- \_renumber_message, default TRUE   
   This flag controls when a message describing the valid, expected move is generated. Error conditions typically suppress this summarizing message. 
   - Can't be set manually

### The message generation rules

Message generation focuses on two tasks and follows a simple rule set:

1. Using the flag properties, decide which of error message to generate (if any)
   - there can be multiple error messages on a single request
   - Error states will toggle `_renumber_message` property as necessary
2. Using `_renumber_message` property, decide whether to include a 'move summary' message (Change piece #x to #y)
   - only the \_vague\_receiver error condition will allow the move summary to be generated

All the generated messages will be returned in an array.


Topics: Studio manager
